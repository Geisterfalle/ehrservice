<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015 Christian Chevalley
  ~ This file is part of Project Ethercis
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ethercis-disabled</groupId>
    <artifactId>jooq-pg</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19</version>
                <configuration>
                    <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <id>install-local</id>
                        <phase>package</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/target/${project.artifactId}-${project.version}.jar</file>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                            <packaging>jar</packaging>
                            <localRepositoryPath>${user.localDirectoryPath}</localRepositoryPath>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.3</version>
                <configuration>
                    <filters>
                        <filter>
                            <artifact>*:*:*</artifact>
                            <excludes>
                                <exclude>*.xml</exclude>
                                <exclude>*.properties</exclude>
                                <exclude>*.sql</exclude>
                                <exclude>*.xsd</exclude>
                            </excludes>
                        </filter>
                        <filter>
                            <artifact>*:*:*</artifact>
                            <excludes>
                                <exclude>org/openehr/xsd/**</exclude>
                            </excludes>
                        </filter>
                    </filters>
                    <artifactSet>
                        <excludes>
                            <exclude>ethercis:ecis-core</exclude>
                            <exclude>ethercis:ecis-ehrdao</exclude>
                            <!--<exclude>ethercis:jooq-pg</exclude>-->
                            <exclude>ethercis:aql-processor</exclude>
                            <exclude>ethercis:ecis-transform</exclude>
                            <exclude>ethercis:ecis-validation</exclude>
                            <exclude>ethercis:ecis-knowledge-cache</exclude>
                            <exclude>junit:junit</exclude>
                            <exclude>jmock:*</exclude>
                            <exclude>*:xml-apis</exclude>
                            <exclude>org.apache.maven:lib:tests</exclude>
                        </excludes>
                    </artifactSet>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <!--<phase>none</phase>-->
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Use this to deploy the shade JAR into a deployment directory -->
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install-jar</id>
                        <phase>install</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <version>${project.version}</version>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${user.deploy}</outputDirectory>
                            <stripVersion>false</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.7.3</version>

                <executions>
                    <execution>
                        <id>jooq-codegen</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <jdbc>
                                <driver>org.postgresql.Driver</driver>
                                <!-- make sure the url points to your db host:port/db_name -->
                                <url>jdbc:postgresql://localhost:5434/ethercis</url>
                                <!-- credential to connect to the db -->
                                <user>postgres</user>
                                <password>postgres</password>
                            </jdbc>
                            <generator>
                                <database>
                                    <!-- The database dialect fromBinder jooq-meta. Available dialects are named
                                        org.util.[database].[database]Database. Known values are: org.jooq.util.ase.ASEDatabase
                                        (to be used with Sybase ASE) org.jooq.util.cubrid.CUBRIDDatabase org.jooq.util.db2.DB2Database
                                        org.jooq.util.derby.DerbyDatabase org.jooq.util.h2.H2Database org.jooq.util.hsqldb.HSQLDBDatabase
                                        org.jooq.util.ingres.IngresDatabase org.jooq.util.mysql.MySQLDatabase org.jooq.util.oracle.OracleDatabase
                                        org.jooq.util.postgres.PostgresDatabase org.jooq.util.sqlite.SQLiteDatabase
                                        org.jooq.util.sqlserver.SQLServerDatabase org.jooq.util.sybase.SybaseDatabase
                                        (to be used with Sybase SQL Anywhere) You can also provide your own org.jooq.util.Database
                                        implementation here, if your database is currently not supported or if you
                                        wish to read the database schema fromBinder a file, such as a Hibernate .hbm.xml
                                        file -->
                                    <name>org.jooq.util.postgres.PostgresDatabase</name>
                                    <!-- All elements that are generated fromBinder your schema (A Java regular
                                        expression. Use the pipe to separate several expressions) Watch out for case-sensitivity.
                                        Depending on your database, this might be important! You can storeComposition case-insensitive
                                        regular expressions using this syntax: (?i:expr) -->
                                    <includes></includes>
                                    <!-- All elements that are excluded fromBinder your schema (A Java regular expression.
                                        Use the pipe to separate several expressions). Excludes match before includes -->
                                    <excludes></excludes>
                                    <!-- The schema that is used locally as a source for meta information.
                                        This could be your development schema or the production schema, etc This
                                        cannot be combined with the schemata element. If left empty, jOOQ will generate
                                        all available schemata. See the manual's next section to learn how to generate
                                        several schemata -->
                                    <inputSchema>ehr</inputSchema>
                                </database>
                                <generate>
                                    <!-- Generation flags: See advanced configuration properties -->
                                </generate>
                                <target>
                                    <!-- The destination package of your generated classes (within the destination
                                        directory) jOOQ may append the schema name to this package if generating
                                        multiple schemas, e.g. org.jooq.your.packagename.schema1 org.jooq.your.packagename.schema2 -->
                                    <packageName>com.ethercis.jooq.pg</packageName>
                                    <!-- The destination directory of your generated classes -->
                                    <directory>../src/main/java</directory>
                                </target>
                            </generator>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.jooq/jooq -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>3.7.3</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4-1204-jdbc42</version>
        </dependency>
    </dependencies>
    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>
</project>