/**
 * This class is generated by jOOQ
 */
package com.ethercis.jooq.pg.tables.records;


import com.ethercis.jooq.pg.tables.AttestedView;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttestedViewRecord extends UpdatableRecordImpl<AttestedViewRecord> implements Record10<UUID, UUID, String, String, String, byte[], byte[], String, UUID, String> {

	private static final long serialVersionUID = -677026392;

	/**
	 * Setter for <code>ehr.attested_view.id</code>.
	 */
	public void setId(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ehr.attested_view.id</code>.
	 */
	public UUID getId() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>ehr.attested_view.attestation_id</code>.
	 */
	public void setAttestationId(UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ehr.attested_view.attestation_id</code>.
	 */
	public UUID getAttestationId() {
		return (UUID) getValue(1);
	}

	/**
	 * Setter for <code>ehr.attested_view.alternate_text</code>.
	 */
	public void setAlternateText(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ehr.attested_view.alternate_text</code>.
	 */
	public String getAlternateText() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>ehr.attested_view.compression_algorithm</code>.
	 */
	public void setCompressionAlgorithm(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>ehr.attested_view.compression_algorithm</code>.
	 */
	public String getCompressionAlgorithm() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>ehr.attested_view.media_type</code>.
	 */
	public void setMediaType(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>ehr.attested_view.media_type</code>.
	 */
	public String getMediaType() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>ehr.attested_view.data</code>.
	 */
	public void setData(byte[] value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>ehr.attested_view.data</code>.
	 */
	public byte[] getData() {
		return (byte[]) getValue(5);
	}

	/**
	 * Setter for <code>ehr.attested_view.integrity_check</code>.
	 */
	public void setIntegrityCheck(byte[] value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>ehr.attested_view.integrity_check</code>.
	 */
	public byte[] getIntegrityCheck() {
		return (byte[]) getValue(6);
	}

	/**
	 * Setter for <code>ehr.attested_view.integrity_check_algorithm</code>.
	 */
	public void setIntegrityCheckAlgorithm(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>ehr.attested_view.integrity_check_algorithm</code>.
	 */
	public String getIntegrityCheckAlgorithm() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>ehr.attested_view.thumbnail</code>.
	 */
	public void setThumbnail(UUID value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>ehr.attested_view.thumbnail</code>.
	 */
	public UUID getThumbnail() {
		return (UUID) getValue(8);
	}

	/**
	 * Setter for <code>ehr.attested_view.uri</code>.
	 */
	public void setUri(String value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>ehr.attested_view.uri</code>.
	 */
	public String getUri() {
		return (String) getValue(9);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record10 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<UUID, UUID, String, String, String, byte[], byte[], String, UUID, String> fieldsRow() {
		return (Row10) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row10<UUID, UUID, String, String, String, byte[], byte[], String, UUID, String> valuesRow() {
		return (Row10) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return AttestedView.ATTESTED_VIEW.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field2() {
		return AttestedView.ATTESTED_VIEW.ATTESTATION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return AttestedView.ATTESTED_VIEW.ALTERNATE_TEXT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return AttestedView.ATTESTED_VIEW.COMPRESSION_ALGORITHM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return AttestedView.ATTESTED_VIEW.MEDIA_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field6() {
		return AttestedView.ATTESTED_VIEW.DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<byte[]> field7() {
		return AttestedView.ATTESTED_VIEW.INTEGRITY_CHECK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return AttestedView.ATTESTED_VIEW.INTEGRITY_CHECK_ALGORITHM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field9() {
		return AttestedView.ATTESTED_VIEW.THUMBNAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field10() {
		return AttestedView.ATTESTED_VIEW.URI;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value2() {
		return getAttestationId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getAlternateText();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getCompressionAlgorithm();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getMediaType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value6() {
		return getData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value7() {
		return getIntegrityCheck();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getIntegrityCheckAlgorithm();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value9() {
		return getThumbnail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value10() {
		return getUri();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord value1(UUID value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord value2(UUID value) {
		setAttestationId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord value3(String value) {
		setAlternateText(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord value4(String value) {
		setCompressionAlgorithm(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord value5(String value) {
		setMediaType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord value6(byte[] value) {
		setData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord value7(byte[] value) {
		setIntegrityCheck(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord value8(String value) {
		setIntegrityCheckAlgorithm(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord value9(UUID value) {
		setThumbnail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord value10(String value) {
		setUri(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestedViewRecord values(UUID value1, UUID value2, String value3, String value4, String value5, byte[] value6, byte[] value7, String value8, UUID value9, String value10) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		value10(value10);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AttestedViewRecord
	 */
	public AttestedViewRecord() {
		super(AttestedView.ATTESTED_VIEW);
	}

	/**
	 * Create a detached, initialised AttestedViewRecord
	 */
	public AttestedViewRecord(UUID id, UUID attestationId, String alternateText, String compressionAlgorithm, String mediaType, byte[] data, byte[] integrityCheck, String integrityCheckAlgorithm, UUID thumbnail, String uri) {
		super(AttestedView.ATTESTED_VIEW);

		setValue(0, id);
		setValue(1, attestationId);
		setValue(2, alternateText);
		setValue(3, compressionAlgorithm);
		setValue(4, mediaType);
		setValue(5, data);
		setValue(6, integrityCheck);
		setValue(7, integrityCheckAlgorithm);
		setValue(8, thumbnail);
		setValue(9, uri);
	}
}
