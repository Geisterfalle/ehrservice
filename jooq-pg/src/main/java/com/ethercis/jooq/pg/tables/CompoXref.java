/**
 * This class is generated by jOOQ
 */
package com.ethercis.jooq.pg.tables;


import com.ethercis.jooq.pg.Ehr;
import com.ethercis.jooq.pg.Keys;
import com.ethercis.jooq.pg.tables.records.CompoXrefRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompoXref extends TableImpl<CompoXrefRecord> {

	private static final long serialVersionUID = 2063331928;

	/**
	 * The reference instance of <code>ehr.compo_xref</code>
	 */
	public static final CompoXref COMPO_XREF = new CompoXref();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CompoXrefRecord> getRecordType() {
		return CompoXrefRecord.class;
	}

	/**
	 * The column <code>ehr.compo_xref.master_uuid</code>.
	 */
	public final TableField<CompoXrefRecord, UUID> MASTER_UUID = createField("master_uuid", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.compo_xref.child_uuid</code>.
	 */
	public final TableField<CompoXrefRecord, UUID> CHILD_UUID = createField("child_uuid", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.compo_xref.sys_transaction</code>.
	 */
	public final TableField<CompoXrefRecord, Timestamp> SYS_TRANSACTION = createField("sys_transaction", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * Create a <code>ehr.compo_xref</code> table reference
	 */
	public CompoXref() {
		this("compo_xref", null);
	}

	/**
	 * Create an aliased <code>ehr.compo_xref</code> table reference
	 */
	public CompoXref(String alias) {
		this(alias, COMPO_XREF);
	}

	private CompoXref(String alias, Table<CompoXrefRecord> aliased) {
		this(alias, aliased, null);
	}

	private CompoXref(String alias, Table<CompoXrefRecord> aliased, Field<?>[] parameters) {
		super(alias, Ehr.EHR, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<CompoXrefRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<CompoXrefRecord, ?>>asList(Keys.COMPO_XREF__COMPO_XREF_MASTER_UUID_FKEY, Keys.COMPO_XREF__COMPO_XREF_CHILD_UUID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CompoXref as(String alias) {
		return new CompoXref(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CompoXref rename(String name) {
		return new CompoXref(name, null);
	}
}
