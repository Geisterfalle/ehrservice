/**
 * This class is generated by jOOQ
 */
package com.ethercis.jooq.pg;


import com.ethercis.jooq.pg.tables.Access;
import com.ethercis.jooq.pg.tables.Attestation;
import com.ethercis.jooq.pg.tables.AttestedView;
import com.ethercis.jooq.pg.tables.CompoXref;
import com.ethercis.jooq.pg.tables.Composition;
import com.ethercis.jooq.pg.tables.Concept;
import com.ethercis.jooq.pg.tables.Contribution;
import com.ethercis.jooq.pg.tables.Ehr;
import com.ethercis.jooq.pg.tables.Entry;
import com.ethercis.jooq.pg.tables.EventContext;
import com.ethercis.jooq.pg.tables.Identifier;
import com.ethercis.jooq.pg.tables.Language;
import com.ethercis.jooq.pg.tables.Participation;
import com.ethercis.jooq.pg.tables.PartyIdentified;
import com.ethercis.jooq.pg.tables.SessionLog;
import com.ethercis.jooq.pg.tables.Status;
import com.ethercis.jooq.pg.tables.System;
import com.ethercis.jooq.pg.tables.TerminologyProvider;
import com.ethercis.jooq.pg.tables.Territory;
import com.ethercis.jooq.pg.tables.records.AccessRecord;
import com.ethercis.jooq.pg.tables.records.AttestationRecord;
import com.ethercis.jooq.pg.tables.records.AttestedViewRecord;
import com.ethercis.jooq.pg.tables.records.CompoXrefRecord;
import com.ethercis.jooq.pg.tables.records.CompositionRecord;
import com.ethercis.jooq.pg.tables.records.ConceptRecord;
import com.ethercis.jooq.pg.tables.records.ContributionRecord;
import com.ethercis.jooq.pg.tables.records.EhrRecord;
import com.ethercis.jooq.pg.tables.records.EntryRecord;
import com.ethercis.jooq.pg.tables.records.EventContextRecord;
import com.ethercis.jooq.pg.tables.records.IdentifierRecord;
import com.ethercis.jooq.pg.tables.records.LanguageRecord;
import com.ethercis.jooq.pg.tables.records.ParticipationRecord;
import com.ethercis.jooq.pg.tables.records.PartyIdentifiedRecord;
import com.ethercis.jooq.pg.tables.records.SessionLogRecord;
import com.ethercis.jooq.pg.tables.records.StatusRecord;
import com.ethercis.jooq.pg.tables.records.SystemRecord;
import com.ethercis.jooq.pg.tables.records.TerminologyProviderRecord;
import com.ethercis.jooq.pg.tables.records.TerritoryRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>ehr</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<AccessRecord> ACCESS_PKEY = UniqueKeys0.ACCESS_PKEY;
	public static final UniqueKey<AttestationRecord> ATTESTATION_PKEY = UniqueKeys0.ATTESTATION_PKEY;
	public static final UniqueKey<AttestedViewRecord> ATTESTED_VIEW_PKEY = UniqueKeys0.ATTESTED_VIEW_PKEY;
	public static final UniqueKey<CompositionRecord> COMPOSITION_PKEY = UniqueKeys0.COMPOSITION_PKEY;
	public static final UniqueKey<ConceptRecord> CONCEPT_PKEY = UniqueKeys0.CONCEPT_PKEY;
	public static final UniqueKey<ContributionRecord> CONTRIBUTION_PKEY = UniqueKeys0.CONTRIBUTION_PKEY;
	public static final UniqueKey<EhrRecord> EHR_PKEY = UniqueKeys0.EHR_PKEY;
	public static final UniqueKey<EntryRecord> ENTRY_PKEY = UniqueKeys0.ENTRY_PKEY;
	public static final UniqueKey<EventContextRecord> EVENT_CONTEXT_PKEY = UniqueKeys0.EVENT_CONTEXT_PKEY;
	public static final UniqueKey<LanguageRecord> LANGUAGE_PKEY = UniqueKeys0.LANGUAGE_PKEY;
	public static final UniqueKey<ParticipationRecord> PARTICIPATION_PKEY = UniqueKeys0.PARTICIPATION_PKEY;
	public static final UniqueKey<PartyIdentifiedRecord> PARTY_IDENTIFIED_PKEY = UniqueKeys0.PARTY_IDENTIFIED_PKEY;
	public static final UniqueKey<SessionLogRecord> SESSION_LOG_PKEY = UniqueKeys0.SESSION_LOG_PKEY;
	public static final UniqueKey<StatusRecord> STATUS_PKEY = UniqueKeys0.STATUS_PKEY;
	public static final UniqueKey<SystemRecord> SYSTEM_PKEY = UniqueKeys0.SYSTEM_PKEY;
	public static final UniqueKey<TerminologyProviderRecord> TERMINOLOGY_PROVIDER_PKEY = UniqueKeys0.TERMINOLOGY_PROVIDER_PKEY;
	public static final UniqueKey<TerritoryRecord> TERRITORY_PKEY = UniqueKeys0.TERRITORY_PKEY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<AttestationRecord, ContributionRecord> ATTESTATION__ATTESTATION_CONTRIBUTION_ID_FKEY = ForeignKeys0.ATTESTATION__ATTESTATION_CONTRIBUTION_ID_FKEY;
	public static final ForeignKey<AttestedViewRecord, AttestationRecord> ATTESTED_VIEW__ATTESTED_VIEW_ATTESTATION_ID_FKEY = ForeignKeys0.ATTESTED_VIEW__ATTESTED_VIEW_ATTESTATION_ID_FKEY;
	public static final ForeignKey<CompoXrefRecord, CompositionRecord> COMPO_XREF__COMPO_XREF_MASTER_UUID_FKEY = ForeignKeys0.COMPO_XREF__COMPO_XREF_MASTER_UUID_FKEY;
	public static final ForeignKey<CompoXrefRecord, CompositionRecord> COMPO_XREF__COMPO_XREF_CHILD_UUID_FKEY = ForeignKeys0.COMPO_XREF__COMPO_XREF_CHILD_UUID_FKEY;
	public static final ForeignKey<CompositionRecord, EhrRecord> COMPOSITION__COMPOSITION_EHR_ID_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_EHR_ID_FKEY;
	public static final ForeignKey<CompositionRecord, ContributionRecord> COMPOSITION__COMPOSITION_IN_CONTRIBUTION_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_IN_CONTRIBUTION_FKEY;
	public static final ForeignKey<CompositionRecord, LanguageRecord> COMPOSITION__COMPOSITION_LANGUAGE_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_LANGUAGE_FKEY;
	public static final ForeignKey<CompositionRecord, TerritoryRecord> COMPOSITION__COMPOSITION_TERRITORY_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_TERRITORY_FKEY;
	public static final ForeignKey<CompositionRecord, PartyIdentifiedRecord> COMPOSITION__COMPOSITION_COMPOSER_FKEY = ForeignKeys0.COMPOSITION__COMPOSITION_COMPOSER_FKEY;
	public static final ForeignKey<ConceptRecord, LanguageRecord> CONCEPT__CONCEPT_LANGUAGE_FKEY = ForeignKeys0.CONCEPT__CONCEPT_LANGUAGE_FKEY;
	public static final ForeignKey<ContributionRecord, EhrRecord> CONTRIBUTION__CONTRIBUTION_EHR_ID_FKEY = ForeignKeys0.CONTRIBUTION__CONTRIBUTION_EHR_ID_FKEY;
	public static final ForeignKey<ContributionRecord, SystemRecord> CONTRIBUTION__CONTRIBUTION_SYSTEM_ID_FKEY = ForeignKeys0.CONTRIBUTION__CONTRIBUTION_SYSTEM_ID_FKEY;
	public static final ForeignKey<ContributionRecord, PartyIdentifiedRecord> CONTRIBUTION__CONTRIBUTION_COMMITTER_FKEY = ForeignKeys0.CONTRIBUTION__CONTRIBUTION_COMMITTER_FKEY;
	public static final ForeignKey<EhrRecord, AccessRecord> EHR__EHR_ACCESS_FKEY = ForeignKeys0.EHR__EHR_ACCESS_FKEY;
	public static final ForeignKey<EhrRecord, SystemRecord> EHR__EHR_SYSTEM_ID_FKEY = ForeignKeys0.EHR__EHR_SYSTEM_ID_FKEY;
	public static final ForeignKey<EntryRecord, CompositionRecord> ENTRY__ENTRY_COMPOSITION_ID_FKEY = ForeignKeys0.ENTRY__ENTRY_COMPOSITION_ID_FKEY;
	public static final ForeignKey<EntryRecord, ConceptRecord> ENTRY__ENTRY_CATEGORY_FKEY = ForeignKeys0.ENTRY__ENTRY_CATEGORY_FKEY;
	public static final ForeignKey<EventContextRecord, CompositionRecord> EVENT_CONTEXT__EVENT_CONTEXT_COMPOSITION_ID_FKEY = ForeignKeys0.EVENT_CONTEXT__EVENT_CONTEXT_COMPOSITION_ID_FKEY;
	public static final ForeignKey<EventContextRecord, PartyIdentifiedRecord> EVENT_CONTEXT__EVENT_CONTEXT_FACILITY_FKEY = ForeignKeys0.EVENT_CONTEXT__EVENT_CONTEXT_FACILITY_FKEY;
	public static final ForeignKey<EventContextRecord, ConceptRecord> EVENT_CONTEXT__EVENT_CONTEXT_SETTING_FKEY = ForeignKeys0.EVENT_CONTEXT__EVENT_CONTEXT_SETTING_FKEY;
	public static final ForeignKey<IdentifierRecord, PartyIdentifiedRecord> IDENTIFIER__IDENTIFIER_PARTY_FKEY = ForeignKeys0.IDENTIFIER__IDENTIFIER_PARTY_FKEY;
	public static final ForeignKey<ParticipationRecord, EventContextRecord> PARTICIPATION__PARTICIPATION_EVENT_CONTEXT_FKEY = ForeignKeys0.PARTICIPATION__PARTICIPATION_EVENT_CONTEXT_FKEY;
	public static final ForeignKey<ParticipationRecord, PartyIdentifiedRecord> PARTICIPATION__PARTICIPATION_PERFORMER_FKEY = ForeignKeys0.PARTICIPATION__PARTICIPATION_PERFORMER_FKEY;
	public static final ForeignKey<StatusRecord, EhrRecord> STATUS__STATUS_EHR_ID_FKEY = ForeignKeys0.STATUS__STATUS_EHR_ID_FKEY;
	public static final ForeignKey<StatusRecord, PartyIdentifiedRecord> STATUS__STATUS_PARTY_FKEY = ForeignKeys0.STATUS__STATUS_PARTY_FKEY;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<AccessRecord> ACCESS_PKEY = createUniqueKey(Access.ACCESS, Access.ACCESS.ID);
		public static final UniqueKey<AttestationRecord> ATTESTATION_PKEY = createUniqueKey(Attestation.ATTESTATION, Attestation.ATTESTATION.ID);
		public static final UniqueKey<AttestedViewRecord> ATTESTED_VIEW_PKEY = createUniqueKey(AttestedView.ATTESTED_VIEW, AttestedView.ATTESTED_VIEW.ID);
		public static final UniqueKey<CompositionRecord> COMPOSITION_PKEY = createUniqueKey(Composition.COMPOSITION, Composition.COMPOSITION.ID);
		public static final UniqueKey<ConceptRecord> CONCEPT_PKEY = createUniqueKey(Concept.CONCEPT, Concept.CONCEPT.ID);
		public static final UniqueKey<ContributionRecord> CONTRIBUTION_PKEY = createUniqueKey(Contribution.CONTRIBUTION, Contribution.CONTRIBUTION.ID);
		public static final UniqueKey<EhrRecord> EHR_PKEY = createUniqueKey(Ehr.EHR, Ehr.EHR.ID);
		public static final UniqueKey<EntryRecord> ENTRY_PKEY = createUniqueKey(Entry.ENTRY, Entry.ENTRY.ID);
		public static final UniqueKey<EventContextRecord> EVENT_CONTEXT_PKEY = createUniqueKey(EventContext.EVENT_CONTEXT, EventContext.EVENT_CONTEXT.ID);
		public static final UniqueKey<LanguageRecord> LANGUAGE_PKEY = createUniqueKey(Language.LANGUAGE, Language.LANGUAGE.CODE);
		public static final UniqueKey<ParticipationRecord> PARTICIPATION_PKEY = createUniqueKey(Participation.PARTICIPATION, Participation.PARTICIPATION.ID);
		public static final UniqueKey<PartyIdentifiedRecord> PARTY_IDENTIFIED_PKEY = createUniqueKey(PartyIdentified.PARTY_IDENTIFIED, PartyIdentified.PARTY_IDENTIFIED.ID);
		public static final UniqueKey<SessionLogRecord> SESSION_LOG_PKEY = createUniqueKey(SessionLog.SESSION_LOG, SessionLog.SESSION_LOG.ID);
		public static final UniqueKey<StatusRecord> STATUS_PKEY = createUniqueKey(Status.STATUS, Status.STATUS.ID);
		public static final UniqueKey<SystemRecord> SYSTEM_PKEY = createUniqueKey(System.SYSTEM, System.SYSTEM.ID);
		public static final UniqueKey<TerminologyProviderRecord> TERMINOLOGY_PROVIDER_PKEY = createUniqueKey(TerminologyProvider.TERMINOLOGY_PROVIDER, TerminologyProvider.TERMINOLOGY_PROVIDER.CODE);
		public static final UniqueKey<TerritoryRecord> TERRITORY_PKEY = createUniqueKey(Territory.TERRITORY, Territory.TERRITORY.CODE);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<AttestationRecord, ContributionRecord> ATTESTATION__ATTESTATION_CONTRIBUTION_ID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.CONTRIBUTION_PKEY, Attestation.ATTESTATION, Attestation.ATTESTATION.CONTRIBUTION_ID);
		public static final ForeignKey<AttestedViewRecord, AttestationRecord> ATTESTED_VIEW__ATTESTED_VIEW_ATTESTATION_ID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.ATTESTATION_PKEY, AttestedView.ATTESTED_VIEW, AttestedView.ATTESTED_VIEW.ATTESTATION_ID);
		public static final ForeignKey<CompoXrefRecord, CompositionRecord> COMPO_XREF__COMPO_XREF_MASTER_UUID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.COMPOSITION_PKEY, CompoXref.COMPO_XREF, CompoXref.COMPO_XREF.MASTER_UUID);
		public static final ForeignKey<CompoXrefRecord, CompositionRecord> COMPO_XREF__COMPO_XREF_CHILD_UUID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.COMPOSITION_PKEY, CompoXref.COMPO_XREF, CompoXref.COMPO_XREF.CHILD_UUID);
		public static final ForeignKey<CompositionRecord, EhrRecord> COMPOSITION__COMPOSITION_EHR_ID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.EHR_PKEY, Composition.COMPOSITION, Composition.COMPOSITION.EHR_ID);
		public static final ForeignKey<CompositionRecord, ContributionRecord> COMPOSITION__COMPOSITION_IN_CONTRIBUTION_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.CONTRIBUTION_PKEY, Composition.COMPOSITION, Composition.COMPOSITION.IN_CONTRIBUTION);
		public static final ForeignKey<CompositionRecord, LanguageRecord> COMPOSITION__COMPOSITION_LANGUAGE_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.LANGUAGE_PKEY, Composition.COMPOSITION, Composition.COMPOSITION.LANGUAGE);
		public static final ForeignKey<CompositionRecord, TerritoryRecord> COMPOSITION__COMPOSITION_TERRITORY_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.TERRITORY_PKEY, Composition.COMPOSITION, Composition.COMPOSITION.TERRITORY);
		public static final ForeignKey<CompositionRecord, PartyIdentifiedRecord> COMPOSITION__COMPOSITION_COMPOSER_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.PARTY_IDENTIFIED_PKEY, Composition.COMPOSITION, Composition.COMPOSITION.COMPOSER);
		public static final ForeignKey<ConceptRecord, LanguageRecord> CONCEPT__CONCEPT_LANGUAGE_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.LANGUAGE_PKEY, Concept.CONCEPT, Concept.CONCEPT.LANGUAGE);
		public static final ForeignKey<ContributionRecord, EhrRecord> CONTRIBUTION__CONTRIBUTION_EHR_ID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.EHR_PKEY, Contribution.CONTRIBUTION, Contribution.CONTRIBUTION.EHR_ID);
		public static final ForeignKey<ContributionRecord, SystemRecord> CONTRIBUTION__CONTRIBUTION_SYSTEM_ID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.SYSTEM_PKEY, Contribution.CONTRIBUTION, Contribution.CONTRIBUTION.SYSTEM_ID);
		public static final ForeignKey<ContributionRecord, PartyIdentifiedRecord> CONTRIBUTION__CONTRIBUTION_COMMITTER_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.PARTY_IDENTIFIED_PKEY, Contribution.CONTRIBUTION, Contribution.CONTRIBUTION.COMMITTER);
		public static final ForeignKey<EhrRecord, AccessRecord> EHR__EHR_ACCESS_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.ACCESS_PKEY, Ehr.EHR, Ehr.EHR.ACCESS);
		public static final ForeignKey<EhrRecord, SystemRecord> EHR__EHR_SYSTEM_ID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.SYSTEM_PKEY, Ehr.EHR, Ehr.EHR.SYSTEM_ID);
		public static final ForeignKey<EntryRecord, CompositionRecord> ENTRY__ENTRY_COMPOSITION_ID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.COMPOSITION_PKEY, Entry.ENTRY, Entry.ENTRY.COMPOSITION_ID);
		public static final ForeignKey<EntryRecord, ConceptRecord> ENTRY__ENTRY_CATEGORY_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.CONCEPT_PKEY, Entry.ENTRY, Entry.ENTRY.CATEGORY);
		public static final ForeignKey<EventContextRecord, CompositionRecord> EVENT_CONTEXT__EVENT_CONTEXT_COMPOSITION_ID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.COMPOSITION_PKEY, EventContext.EVENT_CONTEXT, EventContext.EVENT_CONTEXT.COMPOSITION_ID);
		public static final ForeignKey<EventContextRecord, PartyIdentifiedRecord> EVENT_CONTEXT__EVENT_CONTEXT_FACILITY_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.PARTY_IDENTIFIED_PKEY, EventContext.EVENT_CONTEXT, EventContext.EVENT_CONTEXT.FACILITY);
		public static final ForeignKey<EventContextRecord, ConceptRecord> EVENT_CONTEXT__EVENT_CONTEXT_SETTING_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.CONCEPT_PKEY, EventContext.EVENT_CONTEXT, EventContext.EVENT_CONTEXT.SETTING);
		public static final ForeignKey<IdentifierRecord, PartyIdentifiedRecord> IDENTIFIER__IDENTIFIER_PARTY_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.PARTY_IDENTIFIED_PKEY, Identifier.IDENTIFIER, Identifier.IDENTIFIER.PARTY);
		public static final ForeignKey<ParticipationRecord, EventContextRecord> PARTICIPATION__PARTICIPATION_EVENT_CONTEXT_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.EVENT_CONTEXT_PKEY, Participation.PARTICIPATION, Participation.PARTICIPATION.EVENT_CONTEXT);
		public static final ForeignKey<ParticipationRecord, PartyIdentifiedRecord> PARTICIPATION__PARTICIPATION_PERFORMER_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.PARTY_IDENTIFIED_PKEY, Participation.PARTICIPATION, Participation.PARTICIPATION.PERFORMER);
		public static final ForeignKey<StatusRecord, EhrRecord> STATUS__STATUS_EHR_ID_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.EHR_PKEY, Status.STATUS, Status.STATUS.EHR_ID);
		public static final ForeignKey<StatusRecord, PartyIdentifiedRecord> STATUS__STATUS_PARTY_FKEY = createForeignKey(com.ethercis.jooq.pg.Keys.PARTY_IDENTIFIED_PKEY, Status.STATUS, Status.STATUS.PARTY);
	}
}
