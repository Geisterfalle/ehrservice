/**
 * This class is generated by jOOQ
 */
package com.ethercis.jooq.pg.tables;


import com.ethercis.jooq.pg.Ehr;
import com.ethercis.jooq.pg.Keys;
import com.ethercis.jooq.pg.tables.records.TemplateHeadingXrefRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TemplateHeadingXref extends TableImpl<TemplateHeadingXrefRecord> {

	private static final long serialVersionUID = -1626768857;

	/**
	 * The reference instance of <code>ehr.template_heading_xref</code>
	 */
	public static final TemplateHeadingXref TEMPLATE_HEADING_XREF = new TemplateHeadingXref();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TemplateHeadingXrefRecord> getRecordType() {
		return TemplateHeadingXrefRecord.class;
	}

	/**
	 * The column <code>ehr.template_heading_xref.heading_code</code>.
	 */
	public final TableField<TemplateHeadingXrefRecord, String> HEADING_CODE = createField("heading_code", org.jooq.impl.SQLDataType.VARCHAR.length(16), this, "");

	/**
	 * The column <code>ehr.template_heading_xref.template_id</code>.
	 */
	public final TableField<TemplateHeadingXrefRecord, UUID> TEMPLATE_ID = createField("template_id", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * Create a <code>ehr.template_heading_xref</code> table reference
	 */
	public TemplateHeadingXref() {
		this("template_heading_xref", null);
	}

	/**
	 * Create an aliased <code>ehr.template_heading_xref</code> table reference
	 */
	public TemplateHeadingXref(String alias) {
		this(alias, TEMPLATE_HEADING_XREF);
	}

	private TemplateHeadingXref(String alias, Table<TemplateHeadingXrefRecord> aliased) {
		this(alias, aliased, null);
	}

	private TemplateHeadingXref(String alias, Table<TemplateHeadingXrefRecord> aliased, Field<?>[] parameters) {
		super(alias, Ehr.EHR, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TemplateHeadingXrefRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TemplateHeadingXrefRecord, ?>>asList(Keys.TEMPLATE_HEADING_XREF__TEMPLATE_HEADING_XREF_HEADING_CODE_FKEY, Keys.TEMPLATE_HEADING_XREF__TEMPLATE_HEADING_XREF_TEMPLATE_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TemplateHeadingXref as(String alias) {
		return new TemplateHeadingXref(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TemplateHeadingXref rename(String name) {
		return new TemplateHeadingXref(name, null);
	}
}
