/**
 * This class is generated by jOOQ
 */
package com.ethercis.jooq.pg.tables;


import com.ethercis.jooq.pg.Ehr;
import com.ethercis.jooq.pg.Keys;
import com.ethercis.jooq.pg.tables.records.EventContextRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * defines the context of an event (time, who, where... see openEHR IM 5.2
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventContext extends TableImpl<EventContextRecord> {

	private static final long serialVersionUID = -731020907;

	/**
	 * The reference instance of <code>ehr.event_context</code>
	 */
	public static final EventContext EVENT_CONTEXT = new EventContext();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EventContextRecord> getRecordType() {
		return EventContextRecord.class;
	}

	/**
	 * The column <code>ehr.event_context.id</code>.
	 */
	public final TableField<EventContextRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>ehr.event_context.composition_id</code>.
	 */
	public final TableField<EventContextRecord, UUID> COMPOSITION_ID = createField("composition_id", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.event_context.start_time</code>.
	 */
	public final TableField<EventContextRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>ehr.event_context.start_time_tzid</code>.
	 */
	public final TableField<EventContextRecord, String> START_TIME_TZID = createField("start_time_tzid", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

	/**
	 * The column <code>ehr.event_context.end_time</code>.
	 */
	public final TableField<EventContextRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

	/**
	 * The column <code>ehr.event_context.end_time_tzid</code>.
	 */
	public final TableField<EventContextRecord, String> END_TIME_TZID = createField("end_time_tzid", org.jooq.impl.SQLDataType.VARCHAR.length(15), this, "");

	/**
	 * The column <code>ehr.event_context.facility</code>.
	 */
	public final TableField<EventContextRecord, UUID> FACILITY = createField("facility", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.event_context.location</code>.
	 */
	public final TableField<EventContextRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>ehr.event_context.other_context</code>.
	 */
	public final TableField<EventContextRecord, Object> OTHER_CONTEXT = createField("other_context", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "");

	/**
	 * The column <code>ehr.event_context.setting</code>.
	 */
	public final TableField<EventContextRecord, UUID> SETTING = createField("setting", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.event_context.sys_transaction</code>.
	 */
	public final TableField<EventContextRecord, Timestamp> SYS_TRANSACTION = createField("sys_transaction", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>ehr.event_context.sys_period</code>.
	 */
	public final TableField<EventContextRecord, Object> SYS_PERIOD = createField("sys_period", org.jooq.impl.DefaultDataType.getDefaultDataType("tstzrange"), this, "");

	/**
	 * Create a <code>ehr.event_context</code> table reference
	 */
	public EventContext() {
		this("event_context", null);
	}

	/**
	 * Create an aliased <code>ehr.event_context</code> table reference
	 */
	public EventContext(String alias) {
		this(alias, EVENT_CONTEXT);
	}

	private EventContext(String alias, Table<EventContextRecord> aliased) {
		this(alias, aliased, null);
	}

	private EventContext(String alias, Table<EventContextRecord> aliased, Field<?>[] parameters) {
		super(alias, Ehr.EHR, aliased, parameters, "defines the context of an event (time, who, where... see openEHR IM 5.2");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EventContextRecord> getPrimaryKey() {
		return Keys.EVENT_CONTEXT_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EventContextRecord>> getKeys() {
		return Arrays.<UniqueKey<EventContextRecord>>asList(Keys.EVENT_CONTEXT_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<EventContextRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<EventContextRecord, ?>>asList(Keys.EVENT_CONTEXT__EVENT_CONTEXT_COMPOSITION_ID_FKEY, Keys.EVENT_CONTEXT__EVENT_CONTEXT_FACILITY_FKEY, Keys.EVENT_CONTEXT__EVENT_CONTEXT_SETTING_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventContext as(String alias) {
		return new EventContext(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EventContext rename(String name) {
		return new EventContext(name, null);
	}
}
