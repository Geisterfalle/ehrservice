/**
 * This class is generated by jOOQ
 */
package com.ethercis.dao.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.3"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttestedView extends org.jooq.impl.TableImpl<com.ethercis.dao.jooq.tables.records.AttestedViewRecord> {

	private static final long serialVersionUID = -1676732050;

	/**
	 * The reference instance of <code>ehr.attested_view</code>
	 */
	public static final com.ethercis.dao.jooq.tables.AttestedView ATTESTED_VIEW = new com.ethercis.dao.jooq.tables.AttestedView();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.ethercis.dao.jooq.tables.records.AttestedViewRecord> getRecordType() {
		return com.ethercis.dao.jooq.tables.records.AttestedViewRecord.class;
	}

	/**
	 * The column <code>ehr.attested_view.id</code>.
	 */
	public final org.jooq.TableField<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, java.util.UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>ehr.attested_view.attestation_id</code>.
	 */
	public final org.jooq.TableField<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, java.util.UUID> ATTESTATION_ID = createField("attestation_id", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.attested_view.alternate_text</code>.
	 */
	public final org.jooq.TableField<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, java.lang.String> ALTERNATE_TEXT = createField("alternate_text", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>ehr.attested_view.compression_algorithm</code>.
	 */
	public final org.jooq.TableField<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, java.lang.String> COMPRESSION_ALGORITHM = createField("compression_algorithm", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>ehr.attested_view.media_type</code>.
	 */
	public final org.jooq.TableField<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, java.lang.String> MEDIA_TYPE = createField("media_type", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>ehr.attested_view.data</code>.
	 */
	public final org.jooq.TableField<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, byte[]> DATA = createField("data", org.jooq.impl.SQLDataType.BLOB, this, "");

	/**
	 * The column <code>ehr.attested_view.integrity_check</code>.
	 */
	public final org.jooq.TableField<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, byte[]> INTEGRITY_CHECK = createField("integrity_check", org.jooq.impl.SQLDataType.BLOB, this, "");

	/**
	 * The column <code>ehr.attested_view.integrity_check_algorithm</code>.
	 */
	public final org.jooq.TableField<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, java.lang.String> INTEGRITY_CHECK_ALGORITHM = createField("integrity_check_algorithm", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>ehr.attested_view.thumbnail</code>.
	 */
	public final org.jooq.TableField<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, java.util.UUID> THUMBNAIL = createField("thumbnail", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.attested_view.uri</code>.
	 */
	public final org.jooq.TableField<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, java.lang.String> URI = createField("uri", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * Create a <code>ehr.attested_view</code> table reference
	 */
	public AttestedView() {
		this("attested_view", null);
	}

	/**
	 * Create an aliased <code>ehr.attested_view</code> table reference
	 */
	public AttestedView(java.lang.String alias) {
		this(alias, com.ethercis.dao.jooq.tables.AttestedView.ATTESTED_VIEW);
	}

	private AttestedView(java.lang.String alias, org.jooq.Table<com.ethercis.dao.jooq.tables.records.AttestedViewRecord> aliased) {
		this(alias, aliased, null);
	}

	private AttestedView(java.lang.String alias, org.jooq.Table<com.ethercis.dao.jooq.tables.records.AttestedViewRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, com.ethercis.dao.jooq.Ehr.EHR, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<com.ethercis.dao.jooq.tables.records.AttestedViewRecord> getPrimaryKey() {
		return com.ethercis.dao.jooq.Keys.ATTESTED_VIEW_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<com.ethercis.dao.jooq.tables.records.AttestedViewRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<com.ethercis.dao.jooq.tables.records.AttestedViewRecord>>asList(com.ethercis.dao.jooq.Keys.ATTESTED_VIEW_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<com.ethercis.dao.jooq.tables.records.AttestedViewRecord, ?>>asList(com.ethercis.dao.jooq.Keys.ATTESTED_VIEW__ATTESTED_VIEW_ATTESTATION_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.ethercis.dao.jooq.tables.AttestedView as(java.lang.String alias) {
		return new com.ethercis.dao.jooq.tables.AttestedView(alias, this);
	}

	/**
	 * Rename this table
	 */
	public com.ethercis.dao.jooq.tables.AttestedView rename(java.lang.String name) {
		return new com.ethercis.dao.jooq.tables.AttestedView(name, null);
	}
}
