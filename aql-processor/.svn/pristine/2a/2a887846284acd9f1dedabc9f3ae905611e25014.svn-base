/**
 * This class is generated by jOOQ
 */
package com.ethercis.aql.jooq.tables.records;


import com.ethercis.aql.jooq.tables.Concept;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * openEHR common concepts (e.g. terminology) used in the system
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConceptRecord extends UpdatableRecordImpl<ConceptRecord> implements Record4<UUID, Integer, String, String> {

	private static final long serialVersionUID = 1404314908;

	/**
	 * Setter for <code>ehr.concept.id</code>.
	 */
	public void setId(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ehr.concept.id</code>.
	 */
	public UUID getId() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>ehr.concept.conceptid</code>.
	 */
	public void setConceptid(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ehr.concept.conceptid</code>.
	 */
	public Integer getConceptid() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>ehr.concept.language</code>.
	 */
	public void setLanguage(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ehr.concept.language</code>.
	 */
	public String getLanguage() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>ehr.concept.description</code>.
	 */
	public void setDescription(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>ehr.concept.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<UUID, Integer, String, String> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<UUID, Integer, String, String> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return Concept.CONCEPT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Concept.CONCEPT.CONCEPTID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Concept.CONCEPT.LANGUAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Concept.CONCEPT.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getConceptid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getLanguage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConceptRecord value1(UUID value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConceptRecord value2(Integer value) {
		setConceptid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConceptRecord value3(String value) {
		setLanguage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConceptRecord value4(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ConceptRecord values(UUID value1, Integer value2, String value3, String value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ConceptRecord
	 */
	public ConceptRecord() {
		super(Concept.CONCEPT);
	}

	/**
	 * Create a detached, initialised ConceptRecord
	 */
	public ConceptRecord(UUID id, Integer conceptid, String language, String description) {
		super(Concept.CONCEPT);

		setValue(0, id);
		setValue(1, conceptid);
		setValue(2, language);
		setValue(3, description);
	}
}
