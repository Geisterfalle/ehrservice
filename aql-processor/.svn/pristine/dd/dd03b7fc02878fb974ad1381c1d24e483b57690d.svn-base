/**
 * This class is generated by jOOQ
 */
package com.ethercis.aql.jooq.tables;


import com.ethercis.aql.jooq.Ehr;
import com.ethercis.aql.jooq.Keys;
import com.ethercis.aql.jooq.tables.records.SystemRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * system table for reference
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class System extends TableImpl<SystemRecord> {

	private static final long serialVersionUID = 1018543235;

	/**
	 * The reference instance of <code>ehr.system</code>
	 */
	public static final System SYSTEM = new System();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SystemRecord> getRecordType() {
		return SystemRecord.class;
	}

	/**
	 * The column <code>ehr.system.id</code>.
	 */
	public final TableField<SystemRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>ehr.system.description</code>.
	 */
	public final TableField<SystemRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>ehr.system.settings</code>.
	 */
	public final TableField<SystemRecord, String> SETTINGS = createField("settings", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false), this, "");

	/**
	 * Create a <code>ehr.system</code> table reference
	 */
	public System() {
		this("system", null);
	}

	/**
	 * Create an aliased <code>ehr.system</code> table reference
	 */
	public System(String alias) {
		this(alias, SYSTEM);
	}

	private System(String alias, Table<SystemRecord> aliased) {
		this(alias, aliased, null);
	}

	private System(String alias, Table<SystemRecord> aliased, Field<?>[] parameters) {
		super(alias, Ehr.EHR, aliased, parameters, "system table for reference");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SystemRecord> getPrimaryKey() {
		return Keys.SYSTEM_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SystemRecord>> getKeys() {
		return Arrays.<UniqueKey<SystemRecord>>asList(Keys.SYSTEM_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public System as(String alias) {
		return new System(alias, this);
	}

	/**
	 * Rename this table
	 */
	public System rename(String name) {
		return new System(name, null);
	}
}
