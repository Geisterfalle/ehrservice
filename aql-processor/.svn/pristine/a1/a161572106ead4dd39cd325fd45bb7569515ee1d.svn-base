/**
 * This class is generated by jOOQ
 */
package com.ethercis.aql.jooq.tables;


import com.ethercis.aql.jooq.Ehr;
import com.ethercis.aql.jooq.Keys;
import com.ethercis.aql.jooq.tables.records.ConceptRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * openEHR common concepts (e.g. terminology) used in the system
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Concept extends TableImpl<ConceptRecord> {

	private static final long serialVersionUID = 582696076;

	/**
	 * The reference instance of <code>ehr.concept</code>
	 */
	public static final Concept CONCEPT = new Concept();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ConceptRecord> getRecordType() {
		return ConceptRecord.class;
	}

	/**
	 * The column <code>ehr.concept.id</code>.
	 */
	public final TableField<ConceptRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>ehr.concept.conceptid</code>.
	 */
	public final TableField<ConceptRecord, Integer> CONCEPTID = createField("conceptid", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ehr.concept.language</code>.
	 */
	public final TableField<ConceptRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.VARCHAR.length(5), this, "");

	/**
	 * The column <code>ehr.concept.description</code>.
	 */
	public final TableField<ConceptRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "");

	/**
	 * Create a <code>ehr.concept</code> table reference
	 */
	public Concept() {
		this("concept", null);
	}

	/**
	 * Create an aliased <code>ehr.concept</code> table reference
	 */
	public Concept(String alias) {
		this(alias, CONCEPT);
	}

	private Concept(String alias, Table<ConceptRecord> aliased) {
		this(alias, aliased, null);
	}

	private Concept(String alias, Table<ConceptRecord> aliased, Field<?>[] parameters) {
		super(alias, Ehr.EHR, aliased, parameters, "openEHR common concepts (e.g. terminology) used in the system");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ConceptRecord> getPrimaryKey() {
		return Keys.CONCEPT_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ConceptRecord>> getKeys() {
		return Arrays.<UniqueKey<ConceptRecord>>asList(Keys.CONCEPT_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ConceptRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ConceptRecord, ?>>asList(Keys.CONCEPT__CONCEPT_LANGUAGE_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Concept as(String alias) {
		return new Concept(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Concept rename(String name) {
		return new Concept(name, null);
	}
}
