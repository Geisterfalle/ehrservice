/**
 * This class is generated by jOOQ
 */
package com.ethercis.aql.jooq.tables.records;


import com.ethercis.aql.jooq.tables.System;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * system table for reference
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemRecord extends UpdatableRecordImpl<SystemRecord> implements Record3<UUID, String, String> {

	private static final long serialVersionUID = 1430892009;

	/**
	 * Setter for <code>ehr.system.id</code>.
	 */
	public void setId(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ehr.system.id</code>.
	 */
	public UUID getId() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>ehr.system.description</code>.
	 */
	public void setDescription(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ehr.system.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>ehr.system.settings</code>.
	 */
	public void setSettings(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ehr.system.settings</code>.
	 */
	public String getSettings() {
		return (String) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<UUID, String, String> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<UUID, String, String> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return System.SYSTEM.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return System.SYSTEM.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return System.SYSTEM.SETTINGS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getSettings();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SystemRecord value1(UUID value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SystemRecord value2(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SystemRecord value3(String value) {
		setSettings(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SystemRecord values(UUID value1, String value2, String value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SystemRecord
	 */
	public SystemRecord() {
		super(System.SYSTEM);
	}

	/**
	 * Create a detached, initialised SystemRecord
	 */
	public SystemRecord(UUID id, String description, String settings) {
		super(System.SYSTEM);

		setValue(0, id);
		setValue(1, description);
		setValue(2, settings);
	}
}
