/**
 * This class is generated by jOOQ
 */
package com.ethercis.aql.jooq.tables;


import com.ethercis.aql.jooq.Ehr;
import com.ethercis.aql.jooq.Keys;
import com.ethercis.aql.jooq.tables.records.AttestationRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Attestation extends TableImpl<AttestationRecord> {

	private static final long serialVersionUID = -1520697636;

	/**
	 * The reference instance of <code>ehr.attestation</code>
	 */
	public static final Attestation ATTESTATION = new Attestation();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AttestationRecord> getRecordType() {
		return AttestationRecord.class;
	}

	/**
	 * The column <code>ehr.attestation.id</code>.
	 */
	public final TableField<AttestationRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>ehr.attestation.contribution_id</code>.
	 */
	public final TableField<AttestationRecord, UUID> CONTRIBUTION_ID = createField("contribution_id", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.attestation.proof</code>.
	 */
	public final TableField<AttestationRecord, String> PROOF = createField("proof", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>ehr.attestation.reason</code>.
	 */
	public final TableField<AttestationRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>ehr.attestation.is_pending</code>.
	 */
	public final TableField<AttestationRecord, Boolean> IS_PENDING = createField("is_pending", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * Create a <code>ehr.attestation</code> table reference
	 */
	public Attestation() {
		this("attestation", null);
	}

	/**
	 * Create an aliased <code>ehr.attestation</code> table reference
	 */
	public Attestation(String alias) {
		this(alias, ATTESTATION);
	}

	private Attestation(String alias, Table<AttestationRecord> aliased) {
		this(alias, aliased, null);
	}

	private Attestation(String alias, Table<AttestationRecord> aliased, Field<?>[] parameters) {
		super(alias, Ehr.EHR, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AttestationRecord> getPrimaryKey() {
		return Keys.ATTESTATION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AttestationRecord>> getKeys() {
		return Arrays.<UniqueKey<AttestationRecord>>asList(Keys.ATTESTATION_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<AttestationRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<AttestationRecord, ?>>asList(Keys.ATTESTATION__ATTESTATION_CONTRIBUTION_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Attestation as(String alias) {
		return new Attestation(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Attestation rename(String name) {
		return new Attestation(name, null);
	}
}
