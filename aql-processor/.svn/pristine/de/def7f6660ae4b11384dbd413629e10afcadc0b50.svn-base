/**
 * This class is generated by jOOQ
 */
package com.ethercis.aql.jooq.tables;


import com.ethercis.aql.jooq.Ehr;
import com.ethercis.aql.jooq.enums.EntryType;
import com.ethercis.aql.jooq.tables.records.EntryHistoryRecord;

import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntryHistory extends TableImpl<EntryHistoryRecord> {

	private static final long serialVersionUID = 621071147;

	/**
	 * The reference instance of <code>ehr.entry_history</code>
	 */
	public static final EntryHistory ENTRY_HISTORY = new EntryHistory();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EntryHistoryRecord> getRecordType() {
		return EntryHistoryRecord.class;
	}

	/**
	 * The column <code>ehr.entry_history.id</code>.
	 */
	public final TableField<EntryHistoryRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>ehr.entry_history.composition_id</code>.
	 */
	public final TableField<EntryHistoryRecord, UUID> COMPOSITION_ID = createField("composition_id", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.entry_history.sequence</code>.
	 */
	public final TableField<EntryHistoryRecord, Integer> SEQUENCE = createField("sequence", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>ehr.entry_history.item_type</code>.
	 */
	public final TableField<EntryHistoryRecord, EntryType> ITEM_TYPE = createField("item_type", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(com.ethercis.aql.jooq.enums.EntryType.class), this, "");

	/**
	 * The column <code>ehr.entry_history.template_id</code>.
	 */
	public final TableField<EntryHistoryRecord, String> TEMPLATE_ID = createField("template_id", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "");

	/**
	 * The column <code>ehr.entry_history.template_uuid</code>.
	 */
	public final TableField<EntryHistoryRecord, UUID> TEMPLATE_UUID = createField("template_uuid", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.entry_history.archetype_id</code>.
	 */
	public final TableField<EntryHistoryRecord, String> ARCHETYPE_ID = createField("archetype_id", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "");

	/**
	 * The column <code>ehr.entry_history.category</code>.
	 */
	public final TableField<EntryHistoryRecord, UUID> CATEGORY = createField("category", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>ehr.entry_history.entry</code>.
	 */
	public final TableField<EntryHistoryRecord, Object> ENTRY = createField("entry", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "");

	/**
	 * The column <code>ehr.entry_history.sys_transaction</code>.
	 */
	public final TableField<EntryHistoryRecord, Timestamp> SYS_TRANSACTION = createField("sys_transaction", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

	/**
	 * The column <code>ehr.entry_history.sys_period</code>.
	 */
	public final TableField<EntryHistoryRecord, Object> SYS_PERIOD = createField("sys_period", org.jooq.impl.DefaultDataType.getDefaultDataType("tstzrange"), this, "");

	/**
	 * Create a <code>ehr.entry_history</code> table reference
	 */
	public EntryHistory() {
		this("entry_history", null);
	}

	/**
	 * Create an aliased <code>ehr.entry_history</code> table reference
	 */
	public EntryHistory(String alias) {
		this(alias, ENTRY_HISTORY);
	}

	private EntryHistory(String alias, Table<EntryHistoryRecord> aliased) {
		this(alias, aliased, null);
	}

	private EntryHistory(String alias, Table<EntryHistoryRecord> aliased, Field<?>[] parameters) {
		super(alias, Ehr.EHR, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EntryHistory as(String alias) {
		return new EntryHistory(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EntryHistory rename(String name) {
		return new EntryHistory(name, null);
	}
}
