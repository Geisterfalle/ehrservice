/**
 * This class is generated by jOOQ
 */
package com.ethercis.aql.jooq.tables.records;


import com.ethercis.aql.jooq.tables.Identifier;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * specifies an identifier for a party identified, more than one identifier 
 * is possible
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdentifierRecord extends TableRecordImpl<IdentifierRecord> implements Record5<String, String, String, String, UUID> {

	private static final long serialVersionUID = -1861403662;

	/**
	 * Setter for <code>ehr.identifier.id_value</code>.
	 */
	public void setIdValue(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ehr.identifier.id_value</code>.
	 */
	public String getIdValue() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>ehr.identifier.issuer</code>.
	 */
	public void setIssuer(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ehr.identifier.issuer</code>.
	 */
	public String getIssuer() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>ehr.identifier.assigner</code>.
	 */
	public void setAssigner(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ehr.identifier.assigner</code>.
	 */
	public String getAssigner() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>ehr.identifier.type_name</code>.
	 */
	public void setTypeName(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>ehr.identifier.type_name</code>.
	 */
	public String getTypeName() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>ehr.identifier.party</code>.
	 */
	public void setParty(UUID value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>ehr.identifier.party</code>.
	 */
	public UUID getParty() {
		return (UUID) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, String, String, String, UUID> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, String, String, String, UUID> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Identifier.IDENTIFIER.ID_VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Identifier.IDENTIFIER.ISSUER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Identifier.IDENTIFIER.ASSIGNER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Identifier.IDENTIFIER.TYPE_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field5() {
		return Identifier.IDENTIFIER.PARTY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getIdValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getIssuer();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getAssigner();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getTypeName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value5() {
		return getParty();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IdentifierRecord value1(String value) {
		setIdValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IdentifierRecord value2(String value) {
		setIssuer(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IdentifierRecord value3(String value) {
		setAssigner(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IdentifierRecord value4(String value) {
		setTypeName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IdentifierRecord value5(UUID value) {
		setParty(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public IdentifierRecord values(String value1, String value2, String value3, String value4, UUID value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached IdentifierRecord
	 */
	public IdentifierRecord() {
		super(Identifier.IDENTIFIER);
	}

	/**
	 * Create a detached, initialised IdentifierRecord
	 */
	public IdentifierRecord(String idValue, String issuer, String assigner, String typeName, UUID party) {
		super(Identifier.IDENTIFIER);

		setValue(0, idValue);
		setValue(1, issuer);
		setValue(2, assigner);
		setValue(3, typeName);
		setValue(4, party);
	}
}
