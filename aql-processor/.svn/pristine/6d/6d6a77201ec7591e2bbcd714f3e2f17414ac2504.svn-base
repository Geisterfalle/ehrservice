/**
 * This class is generated by jOOQ
 */
package com.ethercis.aql.jooq.tables.records;


import com.ethercis.aql.jooq.tables.Attestation;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttestationRecord extends UpdatableRecordImpl<AttestationRecord> implements Record5<UUID, UUID, String, String, Boolean> {

	private static final long serialVersionUID = -1371329151;

	/**
	 * Setter for <code>ehr.attestation.id</code>.
	 */
	public void setId(UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>ehr.attestation.id</code>.
	 */
	public UUID getId() {
		return (UUID) getValue(0);
	}

	/**
	 * Setter for <code>ehr.attestation.contribution_id</code>.
	 */
	public void setContributionId(UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>ehr.attestation.contribution_id</code>.
	 */
	public UUID getContributionId() {
		return (UUID) getValue(1);
	}

	/**
	 * Setter for <code>ehr.attestation.proof</code>.
	 */
	public void setProof(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>ehr.attestation.proof</code>.
	 */
	public String getProof() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>ehr.attestation.reason</code>.
	 */
	public void setReason(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>ehr.attestation.reason</code>.
	 */
	public String getReason() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>ehr.attestation.is_pending</code>.
	 */
	public void setIsPending(Boolean value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>ehr.attestation.is_pending</code>.
	 */
	public Boolean getIsPending() {
		return (Boolean) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<UUID> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<UUID, UUID, String, String, Boolean> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<UUID, UUID, String, String, Boolean> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field1() {
		return Attestation.ATTESTATION.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field2() {
		return Attestation.ATTESTATION.CONTRIBUTION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Attestation.ATTESTATION.PROOF;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Attestation.ATTESTATION.REASON;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field5() {
		return Attestation.ATTESTATION.IS_PENDING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value2() {
		return getContributionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getProof();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getReason();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value5() {
		return getIsPending();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestationRecord value1(UUID value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestationRecord value2(UUID value) {
		setContributionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestationRecord value3(String value) {
		setProof(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestationRecord value4(String value) {
		setReason(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestationRecord value5(Boolean value) {
		setIsPending(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AttestationRecord values(UUID value1, UUID value2, String value3, String value4, Boolean value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AttestationRecord
	 */
	public AttestationRecord() {
		super(Attestation.ATTESTATION);
	}

	/**
	 * Create a detached, initialised AttestationRecord
	 */
	public AttestationRecord(UUID id, UUID contributionId, String proof, String reason, Boolean isPending) {
		super(Attestation.ATTESTATION);

		setValue(0, id);
		setValue(1, contributionId);
		setValue(2, proof);
		setValue(3, reason);
		setValue(4, isPending);
	}
}
