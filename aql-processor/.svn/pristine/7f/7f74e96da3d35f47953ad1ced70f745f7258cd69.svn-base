/**
 * This class is generated by jOOQ
 */
package com.ethercis.aql.jooq.tables;


import com.ethercis.aql.jooq.Ehr;
import com.ethercis.aql.jooq.Keys;
import com.ethercis.aql.jooq.tables.records.AccessRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * defines the modality for accessing an com.ethercis.ehr (security strategy 
 * implementation)
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Access extends TableImpl<AccessRecord> {

	private static final long serialVersionUID = 177994829;

	/**
	 * The reference instance of <code>ehr.access</code>
	 */
	public static final Access ACCESS = new Access();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AccessRecord> getRecordType() {
		return AccessRecord.class;
	}

	/**
	 * The column <code>ehr.access.id</code>.
	 */
	public final TableField<AccessRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>ehr.access.settings</code>.
	 */
	public final TableField<AccessRecord, String> SETTINGS = createField("settings", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "");

	/**
	 * The column <code>ehr.access.scheme</code>.
	 */
	public final TableField<AccessRecord, String> SCHEME = createField("scheme", org.jooq.impl.SQLDataType.CHAR.length(50), this, "");

	/**
	 * Create a <code>ehr.access</code> table reference
	 */
	public Access() {
		this("access", null);
	}

	/**
	 * Create an aliased <code>ehr.access</code> table reference
	 */
	public Access(String alias) {
		this(alias, ACCESS);
	}

	private Access(String alias, Table<AccessRecord> aliased) {
		this(alias, aliased, null);
	}

	private Access(String alias, Table<AccessRecord> aliased, Field<?>[] parameters) {
		super(alias, Ehr.EHR, aliased, parameters, "defines the modality for accessing an com.ethercis.ehr (security strategy implementation)");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<AccessRecord> getPrimaryKey() {
		return Keys.ACCESS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<AccessRecord>> getKeys() {
		return Arrays.<UniqueKey<AccessRecord>>asList(Keys.ACCESS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Access as(String alias) {
		return new Access(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Access rename(String name) {
		return new Access(name, null);
	}
}
